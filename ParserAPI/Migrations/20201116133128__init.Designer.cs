// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParserAPI.DAL.Context;

namespace ParserAPI.Migrations
{
    [DbContext(typeof(ContextAPI))]
    [Migration("20201116133128__init")]
    partial class _init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ParserAPI.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DirectorUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ExecutorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("DirectorUserId");

                    b.HasIndex("ExecutorUserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(1156),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 2,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8275),
                            DirectorUserId = 2,
                            ExecutorUserId = 3,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 3,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8389),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 4,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8405),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 5,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8420),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 6,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8433),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 7,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8447),
                            DirectorUserId = 4,
                            ExecutorUserId = 5,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 8,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8461),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 9,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8475),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 10,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8489),
                            DirectorUserId = 1,
                            ExecutorUserId = 5,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 11,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8503),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 12,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8517),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 13,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8531),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 14,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8545),
                            DirectorUserId = 3,
                            ExecutorUserId = 1,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 15,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8559),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 16,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8573),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 17,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8588),
                            DirectorUserId = 5,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 18,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8602),
                            DirectorUserId = 1,
                            ExecutorUserId = 1,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 19,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8616),
                            DirectorUserId = 5,
                            ExecutorUserId = 1,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 20,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8630),
                            DirectorUserId = 3,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 21,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8644),
                            DirectorUserId = 1,
                            ExecutorUserId = 5,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 22,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8658),
                            DirectorUserId = 3,
                            ExecutorUserId = 1,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 23,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8672),
                            DirectorUserId = 5,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 24,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 912, DateTimeKind.Local).AddTicks(8686),
                            DirectorUserId = 3,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ParserAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 902, DateTimeKind.Local).AddTicks(8672),
                            Name = "Tom",
                            Status = 0,
                            Surname = "Tom"
                        },
                        new
                        {
                            UserId = 2,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 906, DateTimeKind.Local).AddTicks(817),
                            Name = "Alice",
                            Status = 0,
                            Surname = "Tom"
                        },
                        new
                        {
                            UserId = 3,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 906, DateTimeKind.Local).AddTicks(993),
                            Name = "Sam",
                            Status = 0,
                            Surname = "Tom"
                        },
                        new
                        {
                            UserId = 4,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 906, DateTimeKind.Local).AddTicks(1009),
                            Name = "Sam",
                            Status = 2,
                            Surname = "Tom"
                        },
                        new
                        {
                            UserId = 5,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 16, 16, 31, 20, 906, DateTimeKind.Local).AddTicks(1022),
                            Name = "Sam",
                            Status = 1,
                            Surname = "Tom"
                        });
                });

            modelBuilder.Entity("ParserAPI.Models.Task", b =>
                {
                    b.HasOne("ParserAPI.Models.User", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorUserId");

                    b.HasOne("ParserAPI.Models.User", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorUserId");

                    b.Navigation("Director");

                    b.Navigation("Executor");
                });
#pragma warning restore 612, 618
        }
    }
}
