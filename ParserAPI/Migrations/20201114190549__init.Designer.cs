// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParserAPI.Context;

namespace ParserAPI.Migrations
{
    [DbContext(typeof(ContextAPI))]
    [Migration("20201114190549__init")]
    partial class _init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ParserAPI.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DirectorUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ExecutorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("DirectorUserId");

                    b.HasIndex("ExecutorUserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 271, DateTimeKind.Local).AddTicks(2651),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 2,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3576),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 3,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3743),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 4,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3764),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 5,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3780),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 6,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3794),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 7,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3808),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 8,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3822),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 9,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3835),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 10,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3850),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 11,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3864),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 12,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3878),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 13,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3892),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 14,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3906),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 15,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3920),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 16,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3934),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 17,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3949),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 18,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3964),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 19,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3978),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 20,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(3992),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 21,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(4006),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 22,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(4020),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 23,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(4034),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        },
                        new
                        {
                            TaskId = 24,
                            Content = "Описание",
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 274, DateTimeKind.Local).AddTicks(4048),
                            DirectorUserId = 1,
                            ExecutorUserId = 2,
                            Name = "Создать задачу",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ParserAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 263, DateTimeKind.Local).AddTicks(9220),
                            Name = "Tom",
                            Status = 0,
                            Surname = "Tom"
                        },
                        new
                        {
                            UserId = 2,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 266, DateTimeKind.Local).AddTicks(6321),
                            Name = "Alice",
                            Status = 0,
                            Surname = "Tom"
                        },
                        new
                        {
                            UserId = 3,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 266, DateTimeKind.Local).AddTicks(6453),
                            Name = "Sam",
                            Status = 0,
                            Surname = "Tom"
                        },
                        new
                        {
                            UserId = 4,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 266, DateTimeKind.Local).AddTicks(6469),
                            Name = "Sam",
                            Status = 2,
                            Surname = "Tom"
                        },
                        new
                        {
                            UserId = 5,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2020, 11, 14, 22, 5, 42, 266, DateTimeKind.Local).AddTicks(6483),
                            Name = "Sam",
                            Status = 1,
                            Surname = "Tom"
                        });
                });

            modelBuilder.Entity("ParserAPI.Models.Task", b =>
                {
                    b.HasOne("ParserAPI.Models.User", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorUserId");

                    b.HasOne("ParserAPI.Models.User", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorUserId");

                    b.Navigation("Director");

                    b.Navigation("Executor");
                });
#pragma warning restore 612, 618
        }
    }
}
